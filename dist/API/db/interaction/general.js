"use strict";function _asyncToGenerator(e){return function(){var r=e.apply(this,arguments);return new Promise(function(e,t){function n(a,o){try{var s=r[a](o),c=s.value}catch(e){return void t(e)}return s.done?void e(c):Promise.resolve(c).then(function(e){n("next",e)},function(e){n("throw",e)})}return n("next")})}}Object.defineProperty(exports,"__esModule",{value:!0});var standardInsertQuery=exports.standardInsertQuery=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t,n,a){var o,s,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,o=jwt.verify(a,secret),e.next=4,pool.getConnection();case 4:return s=e.sent,e.next=7,s.query(r,o.user_id);case 7:return c=e.sent,e.abrupt("return",c);case 11:e.prev=11,e.t0=e.catch(0),console.log(e.t0),n(e.t0);case 15:case"end":return e.stop()}},e,this,[[0,11]])}));return function(r,t,n,a){return e.apply(this,arguments)}}(),standardUpdateQuery=exports.standardUpdateQuery=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t,n,a,o){var s,c,u;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=jwt.verify(a,secret),e.next=4,pool.getConnection();case 4:return c=e.sent,e.next=7,c.query(r,t);case 7:if(u=e.sent,!(u.affectedRows>0)){e.next=17;break}if(!(u.changedRows>0)){e.next=14;break}c.connection.release(),o.json({success:!0}),e.next=15;break;case 14:throw new Error("No Change");case 15:e.next=18;break;case 17:throw new Error("ID Not Found");case 18:e.next=24;break;case 20:e.prev=20,e.t0=e.catch(0),console.log(e.t0),n(e.t0);case 24:case"end":return e.stop()}},e,this,[[0,20]])}));return function(r,t,n,a,o){return e.apply(this,arguments)}}(),standardGetQueryToken=exports.standardGetQueryToken=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t,n){var a,o,s;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,a=jwt.verify(n,secret),console.log(a),e.next=5,pool.getConnection();case 5:return o=e.sent,e.next=8,o.query(r,a.user_id);case 8:if(s=e.sent,!(s.length>0)){e.next=13;break}return e.abrupt("return",{success:!0,data:s});case 13:return e.abrupt("return",{success:!1});case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(0),console.log(e.t0),t(e.t0);case 20:case"end":return e.stop()}},e,this,[[0,16]])}));return function(r,t,n){return e.apply(this,arguments)}}(),standardRequiredLengthGetQuery=exports.standardRequiredLengthGetQuery=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t,n,a,o){var s,c,u;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,s=jwt.verify(a,secret),console.log("Decoded",s),e.next=5,pool.getConnection();case 5:return c=e.sent,e.next=8,c.query(r,t);case 8:if(u=e.sent,!(u.length>0)){e.next=13;break}o.json(u),e.next=14;break;case 13:throw new Error("ID Not Found");case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(0),console.log(e.t0),n(e.t0);case 20:case"end":return e.stop()}},e,this,[[0,16]])}));return function(r,t,n,a,o){return e.apply(this,arguments)}}(),standardGetQuery=exports.standardGetQuery=function(){var e=_asyncToGenerator(regeneratorRuntime.mark(function e(r,t,n){var a,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return a=e.sent,e.next=6,a.query(r,t);case 6:return o=e.sent,e.abrupt("return",o);case 10:e.prev=10,e.t0=e.catch(0),console.log(e.t0),n(e.t0);case 14:case"end":return e.stop()}},e,this,[[0,10]])}));return function(r,t,n){return e.apply(this,arguments)}}(),pool=require("../connect.js"),jwt=require("jsonwebtoken"),secret=require("../../general/jwtSecret.js");
//# sourceMappingURL=data:application/json;charset=utf8;base64,
