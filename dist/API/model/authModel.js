"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function r(s,o){try{var a=t[s](o),c=a.value}catch(e){return void n(e)}return a.done?void e(c):Promise.resolve(c).then(function(e){r("next",e)},function(e){r("throw",e)})}return r("next")})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_email=require("../email/email.js"),_email2=_interopRequireDefault(_email),bcrypt=require("bcrypt"),pool=require("../db/connect.js"),saltRounds=10,randomstring=require("randomstring"),AuthModel=function(){function e(t,n,r){var s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";_classCallCheck(this,e),this.sql=s,this.data=t,this.res=n,this.next=r,this.secondSQL=o}return _createClass(e,[{key:"hashPassword",value:function(e){return new Promise(function(t,n){bcrypt.genSalt(saltRounds,function(r,s){r&&n(r),bcrypt.hash(e,s,function(e,r){e&&n(e),t(r)})})})}},{key:"comparePassword",value:function(e,t){return new Promise(function(n,r){bcrypt.compare(e,t,function(e,t){e&&r(e),n(t)})})}},{key:"forgotPasswordSetup",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r,s,o,a,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,n=randomstring.generate({length:20,charset:"hex"}),e.next=7,t.query(this.sql,[n,this.data.email]);case 7:if(r=e.sent,!(r.changedRows>0)){e.next=19;break}return t.connection.release(),s="www.testsite.com",o="You are receiving this because you have requested to reset your password. Please click on the following link, or paste this into your browser to completethe process:\n\n"+s+"/resetForgottenPassword/"+n+"\n\n After confirming your password you will be able to login.\n",a=new _email2.default(this.data.email,"forgotten-password@makeup.com","Forgotten Password",o,this.res),e.next=15,a.sendTokenEmail();case 15:c=e.sent,c&&this.res.json({success:"Email has been sent"}),e.next=21;break;case 19:throw t.connection.release(),new Error("User Does Not Exist");case 21:e.next=27;break;case 23:e.prev=23,e.t0=e.catch(0),console.log(err),this.next(err);case 27:case"end":return e.stop()}},e,this,[[0,23]])}));return e}()},{key:"changePassword",value:function(){function e(e){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,r,s,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.hashPassword(this.data.password);case 3:return n=e.sent,e.next=6,pool.getConnection();case 6:return r=e.sent,e.next=9,r.query(this.sql,[n,t]);case 9:if(s=e.sent,!(s.changedRows>0)){e.next=28;break}if("string"!=typeof t){e.next=24;break}return e.next=14,r.query(this.secondSQL,[t]);case 14:if(o=e.sent,!(o.changedRows>0)){e.next=20;break}r.connection.release(),this.res.status(200).json({success:!0}),e.next=22;break;case 20:throw r.connection.release(),new Error("User Does Not Exist");case 22:e.next=26;break;case 24:r.connection.release(),this.res.status(200).json({success:!0});case 26:e.next=30;break;case 28:throw r.connection.release(),new Error("User Does Not Exist");case 30:e.next=36;break;case 32:e.prev=32,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 36:case"end":return e.stop()}},e,this,[[0,32]])}));return e}()},{key:"confirmUser",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,e.next=6,t.query(this.sql,[this.data.token]);case 6:if(n=e.sent,console.log(n.changedRows),!(n.changedRows>0)){e.next=13;break}t.connection.release(),this.res.status(200).json({success:!0}),e.next=15;break;case 13:throw t.connection.release(),new Error("User Does Not Exist");case 15:e.next=21;break;case 17:e.prev=17,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 21:case"end":return e.stop()}},e,this,[[0,17]])}));return e}()},{key:"register",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r,s,o,a,c,i,u,l,h,p,f,d,m;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=this.data,n=t.email,r=t.password,s=t.first_name,o=t.last_name,a=t.phone,c={email:n,password:r,first_name:s,last_name:o,phone:a},i=randomstring.generate({length:20,charset:"hex"}),c.token=i,e.next=12,pool.getConnection();case 12:return u=e.sent,e.next=15,u.query(this.sql,[this.data.email]);case 15:if(l=e.sent,console.log(l),!(l.length>0)){e.next=22;break}throw u.connection.release(),new Error("Exists");case 22:return e.next=24,this.hashPassword(this.data.password);case 24:return h=e.sent,c.password=h,e.next=28,u.query(this.secondSQL,c);case 28:return p=e.sent,console.log(p),f="www.testsite.com",d="You are receiving this because you (or someone else) have signed up to the website.\n\n Please click on the following link, or paste this into your browser to completethe process:\n\n"+f+"/confirmEmail/"+c.token+"\n\n Once you have confirmed your account, you will be able to login.\n",n=new _email2.default(this.data.email,"userconfirmation@makeup.com","Confirm Account",d,this.res),e.next=35,n.sendTokenEmail();case 35:m=e.sent,m&&this.res.json({success:"Email has been sent"}),u.connection.release();case 38:e.next=44;break;case 40:e.prev=40,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 44:case"end":return e.stop()}},e,this,[[0,40]])}));return e}()},{key:"login",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,e.next=6,t.query(this.sql,[this.data.email]);case 6:if(n=e.sent,console.log("result",n),!(n.length>0)){e.next=21;break}return e.next=11,this.comparePassword(this.data.password,n[0].password);case 11:if(r=e.sent,!r){e.next=17;break}t.connection.release(),this.res.status(200).json({user_id:n[0].user_id,email:n[0].email,first_name:n[0].first_name,last_name:n[0].last_name,phone:n[0].phone}),e.next=19;break;case 17:throw t.connection.release(),new Error("Incorrect Password");case 19:e.next=23;break;case 21:throw t.connection.release(),new Error("User Does Not Exist");case 23:e.next=29;break;case 25:e.prev=25,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 29:case"end":return e.stop()}},e,this,[[0,25]])}));return e}()}]),e}();exports.default=AuthModel;
//# sourceMappingURL=data:application/json;base64,
