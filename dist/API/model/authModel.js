"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function _asyncToGenerator(e){return function(){var t=e.apply(this,arguments);return new Promise(function(e,n){function r(s,o){try{var a=t[s](o),i=a.value}catch(e){return void n(e)}return a.done?void e(i):Promise.resolve(i).then(function(e){r("next",e)},function(e){r("throw",e)})}return r("next")})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_email=require("../email/email.js"),_email2=_interopRequireDefault(_email),bcrypt=require("bcrypt"),pool=require("../db/connect.js"),saltRounds=10,randomstring=require("randomstring"),jwt=require("jsonwebtoken"),secret=require("../general/jwtSecret.js"),AuthModel=function(){function e(t,n,r){var s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"",o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"";_classCallCheck(this,e),this.sql=s,this.data=t,this.res=n,this.next=r,this.secondSQL=o}return _createClass(e,[{key:"hashPassword",value:function(e){return new Promise(function(t,n){bcrypt.genSalt(saltRounds,function(r,s){r&&n(r),bcrypt.hash(e,s,function(e,r){e&&n(e),t(r)})})})}},{key:"comparePassword",value:function(e,t){return new Promise(function(n,r){bcrypt.compare(e,t,function(e,t){e&&r(e),n(t)})})}},{key:"forgotPasswordSetup",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r,s,o,a,i;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,n=randomstring.generate({length:20,charset:"hex"}),e.next=7,t.query(this.sql,[n,this.data.email]);case 7:if(r=e.sent,!(r.changedRows>0)){e.next=19;break}return t.connection.release(),s="www.testsite.com",o="You are receiving this because you have requested to reset your password. Please click on the following link, or paste this into your browser to completethe process:\n\n"+s+"/resetForgottenPassword/"+n+"\n\n After confirming your password you will be able to login.\n",a=new _email2.default(this.data.email,"forgotten-password@makeup.com","Forgotten Password",o,this.res),e.next=15,a.sendTokenEmail();case 15:i=e.sent,i&&this.res.json({success:"Email has been sent"}),e.next=21;break;case 19:throw t.connection.release(),new Error("User Does Not Exist");case 21:e.next=27;break;case 23:e.prev=23,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 27:case"end":return e.stop()}},e,this,[[0,23]])}));return e}()},{key:"changePassword",value:function(){function e(e){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(t){var n,r,s,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,this.hashPassword(this.data.password);case 3:return n=e.sent,e.next=6,pool.getConnection();case 6:return r=e.sent,e.next=9,r.query(this.sql,[n,t]);case 9:if(s=e.sent,!(s.changedRows>0)){e.next=28;break}if("string"!=typeof t){e.next=24;break}return e.next=14,r.query(this.secondSQL,[t]);case 14:if(o=e.sent,!(o.changedRows>0)){e.next=20;break}r.connection.release(),this.res.status(200).json({success:!0}),e.next=22;break;case 20:throw r.connection.release(),new Error("User Does Not Exist");case 22:e.next=26;break;case 24:r.connection.release(),this.res.status(200).json({success:!0});case 26:e.next=30;break;case 28:throw r.connection.release(),new Error("User Does Not Exist");case 30:e.next=36;break;case 32:e.prev=32,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 36:case"end":return e.stop()}},e,this,[[0,32]])}));return e}()},{key:"confirmUser",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,e.next=6,t.query(this.sql,[this.data.token]);case 6:if(n=e.sent,!(n.changedRows>0)){e.next=12;break}t.connection.release(),this.res.status(200).json({success:!0}),e.next=14;break;case 12:throw t.connection.release(),new Error("User Does Not Exist");case 14:e.next=20;break;case 16:e.prev=16,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 20:case"end":return e.stop()}},e,this,[[0,16]])}));return e}()},{key:"register",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r,s,o,a,i,c,u,l,h,p,f,w,d,m;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=this.data,n=t.email,r=t.password,s=t.first_name,o=t.last_name,a=t.phone,i={email:n,password:r,first_name:s,last_name:o,phone:a},c=randomstring.generate({length:20,charset:"hex"}),i.token=c,e.next=12,pool.getConnection();case 12:return u=e.sent,e.next=15,u.query(this.sql,[this.data.email]);case 15:if(l=e.sent,!(l.length>0)){e.next=21;break}throw u.connection.release(),new Error("Exists");case 21:return e.next=23,this.hashPassword(this.data.password);case 23:return h=e.sent,i.password=h,e.next=27,u.query(this.secondSQL,i);case 27:return p=e.sent,f="www.testsite.com",w="You are receiving this because you (or someone else) have signed up to the website.\n\n Please click on the following link, or paste this into your browser to completethe process:\n\n"+f+"/confirmEmail/"+i.token+"\n\n Once you have confirmed your account, you will be able to login.\n",d=new d(this.data.email,"userconfirmation@makeup.com","Confirm Account",w,this.res),e.next=33,d.sendTokenEmail();case 33:m=e.sent,m&&this.res.json({success:"Email has been sent"}),u.connection.release();case 36:e.next=42;break;case 38:e.prev=38,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 42:case"end":return e.stop()}},e,this,[[0,38]])}));return e}()},{key:"login",value:function(){function e(){return t.apply(this,arguments)}var t=_asyncToGenerator(regeneratorRuntime.mark(function e(){var t,n,r,s,o;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,pool.getConnection();case 3:return t=e.sent,e.next=6,t.query(this.sql,[this.data.email]);case 6:if(n=e.sent,r=n.user_id,!(n.length>0)){e.next=22;break}return e.next=11,this.comparePassword(this.data.password,n[0].password);case 11:if(s=e.sent,!s){e.next=18;break}o=jwt.sign({user_id:r},secret,{expiresIn:1440}),t.connection.release(),this.res.status(200).json({user_id:n[0].user_id,email:n[0].email,first_name:n[0].first_name,last_name:n[0].last_name,phone:n[0].phone,token:o}),e.next=20;break;case 18:throw t.connection.release(),new Error("Incorrect Password");case 20:e.next=24;break;case 22:throw t.connection.release(),new Error("User Does Not Exist");case 24:e.next=30;break;case 26:e.prev=26,e.t0=e.catch(0),console.log(e.t0),this.next(e.t0);case 30:case"end":return e.stop()}},e,this,[[0,26]])}));return e}()}]),e}();exports.default=AuthModel;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsL2F1dGhNb2RlbC5qcyJdLCJuYW1lcyI6WyJfZW1haWwiLCJyZXF1aXJlIiwiYmNyeXB0IiwicG9vbCIsInNhbHRSb3VuZHMiLCJyYW5kb21zdHJpbmciLCJqd3QiLCJzZWNyZXQiLCJBdXRoTW9kZWwiLCJkYXRhIiwicmVzIiwibmV4dCIsInNxbCIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInNlY29uZFNRTCIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJyZXNvbHZlIiwicmVqZWN0IiwiZXJyIiwic2FsdCIsImhhc2giLCJkYlBhc3N3b3JkIiwiY29tcGFyZSIsInBhc3N3b3JkIiwiY29tcGFyaXNvblZhbHVlIiwiZ2V0Q29ubmVjdGlvbiIsImNvbm5lY3Rpb24iLCJxdWVyeSIsInRva2VuIiwiZW1haWwiLCJyZXN1bHQiLCJjaGFuZ2VkUm93cyIsInJlbGVhc2UiLCJ1cmwiLCJlbWFpbENvbnRlbnQiLCJQcm9taXNlIiwiZW1haWxSZXNwb25zZSIsInN1Y2Nlc3MiLCJFcnJvciIsImNvbnNvbGUiLCJsb2ciLCJfY29udGV4dCIsInQwIiwiaWRlbnRpZmllciIsImhhc2hQYXNzd29yZCIsImdlbmVyYXRlIiwiY2hhcnNldCIsImpzb24iLCJzdGF0dXMiLCJfY29udGV4dDIiLCJfY29udGV4dDMiLCJmaXJzdF9uYW1lIiwibGFzdF9uYW1lIiwicGhvbmUiLCJ1c2VyIiwicmVnaXN0ZXJUb2tlbiIsImVtYWlsQ2hlY2tSZXN1bHQiLCJpbnNlcnRSZXN1bHQiLCJyZWdpc3RlckVtYWlsQ29udGVudCIsIkVtYWlsIiwic2VuZFRva2VuRW1haWwiLCJfY29udGV4dDQiLCJ1c2VyX2lkIiwiY29tcGFyZVBhc3N3b3JkIiwibWF0Y2giLCJzaWduIiwiZXhwaXJlc0luIiwic2Vjb25kUmVzdWx0IiwiX2NvbnRleHQ1Il0sIm1hcHBpbmdzIjoieXlCQUlBQSxPQUFBQyxRQUFBLDREQUpJQyxPQUFTRCxRQUFRLFVBQ2pCRSxLQUFPRixR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eUMsVUFDRkEsbUJBQ0lwQyxFQUFRekIsSUFBSThELE1BQU1ILFFBQUFBLEdBQVUxRCxRQUNsQzhELFVBQVcsT0FHWHhDLEVBQVdBLFdBQVdNLFVBQ3RCakIsS0FBS1IsSUFBSXlDLE9BQU8sS0FBS0QsTUFDbkJlLFFBQVNoQyxFQUFPLEdBQUdnQyxRQUNuQmpDLE1BQU9DLEVBbEdrQkosR0FBQUEsTUFtR3pCeUIsV0FBWXJCLEVBQU8sR0FBR3FCLFdBQ3RCQyxVQUFXdEIsRUFBTyxHQUFHc0IsVUFwR2pCZSxNQUFBQSxFQUFBQSxHQXFHYWQsTUFDakJ6QixNQUFPQSxpQ0FHVEYsR0FBV0EsV0FBV00sVUFDaEIsR0FBSU0sT0FBTSwyREF2R2RaLEdBQUFBLFdBQVNzQixVQUNQWCxHQUFBQSxPQUFBQSxpRkE2R1JFLFFBQVFDLElBQVI0QixFQUFBMUIsSUFDQTNCLEtBQUtQLEtBQUw0RCxFQUFBMUIsZ0dBak1OckMiLCJmaWxlIjoibW9kZWwvYXV0aE1vZGVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIGJjcnlwdCA9IHJlcXVpcmUoJ2JjcnlwdCcpO1xudmFyIHBvb2wgPSByZXF1aXJlKCcuLi9kYi9jb25uZWN0LmpzJyk7XG5jb25zdCBzYWx0Um91bmRzID0gMTA7XG5jb25zdCByYW5kb21zdHJpbmcgPSByZXF1aXJlKCdyYW5kb21zdHJpbmcnKTtcbmltcG9ydCBFbWFpbCBmcm9tICcuLi9lbWFpbC9lbWFpbC5qcyc7XG52YXIgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XG52YXIgc2VjcmV0ID0gcmVxdWlyZSgnLi4vZ2VuZXJhbC9qd3RTZWNyZXQuanMnKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQXV0aE1vZGVsIHtcblxuICBjb25zdHJ1Y3RvcihkYXRhLCByZXMsIG5leHQsIHNxbCA9ICcnLCBzZWNvbmRTUUwgPSAnJykge1xuICAgIHRoaXMuc3FsID0gc3FsO1xuICAgIHRoaXMuZGF0YSA9IGRhdGE7XG4gICAgdGhpcy5yZXMgPSByZXM7XG4gICAgdGhpcy5uZXh0ID0gbmV4dDtcbiAgICB0aGlzLnNlY29uZFNRTCA9IHNlY29uZFNRTDtcbiAgfVxuXG4gIGhhc2hQYXNzd29yZChwYXNzd29yZCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiAge1xuICAgICAgYmNyeXB0LmdlblNhbHQoc2FsdFJvdW5kcywgKGVyciwgc2FsdCkgPT4ge1xuICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgcmVqZWN0KGVycik7XG4gICAgICAgIH1cbiAgICAgICAgYmNyeXB0Lmhhc2gocGFzc3dvcmQsIHNhbHQsIChlcnIsIGhhc2gpID0+IHtcbiAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmVzb2x2ZShoYXNoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KVxuICB9XG5cbiAgY29tcGFyZVBhc3N3b3JkKHBhc3N3b3JkLCBkYlBhc3N3b3JkKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIGJjcnlwdC5jb21wYXJlKHBhc3N3b3JkLCBkYlBhc3N3b3JkLCAoZXJyLCBjb21wYXJpc29uVmFsdWUpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgIHJlamVjdChlcnIpO1xuICAgICAgICB9XG4gICAgICAgIHJlc29sdmUoY29tcGFyaXNvblZhbHVlKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG5cbiAgYXN5bmMgZm9yZ290UGFzc3dvcmRTZXR1cCgpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHBvb2wuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgY29uc3QgdG9rZW4gPSByYW5kb21zdHJpbmcuZ2VuZXJhdGUoe1xuICAgICAgICBsZW5ndGg6IDIwLFxuICAgICAgICBjaGFyc2V0OiAnaGV4J1xuICAgICAgfSk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KHRoaXMuc3FsLCBbdG9rZW4sIHRoaXMuZGF0YS5lbWFpbF0pO1xuICAgICAgaWYgKHJlc3VsdC5jaGFuZ2VkUm93cyA+IDApIHtcbiAgICAgICAgY29ubmVjdGlvbi5jb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgICAgY29uc3QgdXJsID0gJ3d3dy50ZXN0c2l0ZS5jb20nO1xuICAgICAgICB2YXIgZW1haWxDb250ZW50ID0gJ1lvdSBhcmUgcmVjZWl2aW5nIHRoaXMgYmVjYXVzZSB5b3UgaGF2ZSByZXF1ZXN0ZWQgdG8gcmVzZXQgeW91ciBwYXNzd29yZC4gJyArXG4gICAgICAgICdQbGVhc2UgY2xpY2sgb24gdGhlIGZvbGxvd2luZyBsaW5rLCBvciBwYXN0ZSB0aGlzIGludG8geW91ciBicm93c2VyIHRvIGNvbXBsZXRlJyArXG4gICAgICAgICAndGhlIHByb2Nlc3M6XFxuXFxuJyArIHVybCArICcvcmVzZXRGb3Jnb3R0ZW5QYXNzd29yZC8nICsgdG9rZW4gKyAnXFxuXFxuIEFmdGVyIGNvbmZpcm1pbmcgeW91ciBwYXNzd29yZCcgK1xuICAgICAgICAgJyB5b3Ugd2lsbCBiZSBhYmxlIHRvIGxvZ2luLlxcbic7XG4gICAgICAgIHZhciBlbWFpbCA9IG5ldyBFbWFpbCh0aGlzLmRhdGEuZW1haWwsICdmb3Jnb3R0ZW4tcGFzc3dvcmRAbWFrZXVwLmNvbScsICdGb3Jnb3R0ZW4gUGFzc3dvcmQnLCBlbWFpbENvbnRlbnQsIHRoaXMucmVzKTtcbiAgICAgICAgY29uc3QgZW1haWxSZXNwb25zZSA9IGF3YWl0IGVtYWlsLnNlbmRUb2tlbkVtYWlsKCk7XG4gICAgICAgIGlmIChlbWFpbFJlc3BvbnNlKSB7XG4gICAgICAgICAgdGhpcy5yZXMuanNvbih7c3VjY2VzczogJ0VtYWlsIGhhcyBiZWVuIHNlbnQnfSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVXNlciBEb2VzIE5vdCBFeGlzdCcpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgdGhpcy5uZXh0KGUpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIGNoYW5nZVBhc3N3b3JkKGlkZW50aWZpZXIpIHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgaGFzaCA9IGF3YWl0IHRoaXMuaGFzaFBhc3N3b3JkKHRoaXMuZGF0YS5wYXNzd29yZCk7XG4gICAgICBjb25zdCBjb25uZWN0aW9uID0gYXdhaXQgcG9vbC5nZXRDb25uZWN0aW9uKCk7XG4gICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KHRoaXMuc3FsLCBbaGFzaCwgaWRlbnRpZmllcl0pO1xuICAgICAgaWYgKHJlc3VsdC5jaGFuZ2VkUm93cyA+IDApIHtcbiAgICAgICAgLy8gaWYgdGhlIGlkZW50aWZpZXIgd2FzIHRoZSB0b2tlbiAtIGRvIGFub3RoZXIgcXVlcnkgd2hpY2ggcmVtb3ZlcyB0aGUgdG9rZW5cbiAgICAgICAgaWYgKHR5cGVvZiBpZGVudGlmaWVyID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIGNvbnN0IHNlY29uZFJlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkodGhpcy5zZWNvbmRTUUwsIFtpZGVudGlmaWVyXSk7XG4gICAgICAgICAgaWYgKHNlY29uZFJlc3VsdC5jaGFuZ2VkUm93cyA+IDApIHtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgICAgICB0aGlzLnJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgICAgc3VjY2VzczogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgRG9lcyBOb3QgRXhpc3QnKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7IC8vIG5vcm1hbCBjaGFuZ2UgcGFzc3dvcmQgLSBzZW5kIHN1Y2Nlc3NcbiAgICAgICAgICBjb25uZWN0aW9uLmNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgICAgICAgIHRoaXMucmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBjb25uZWN0aW9uLmNvbm5lY3Rpb24ucmVsZWFzZSgpO1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1VzZXIgRG9lcyBOb3QgRXhpc3QnKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmxvZyhlKTtcbiAgICAgIHRoaXMubmV4dChlKTtcbiAgICB9XG4gIH1cblxuICBhc3luYyBjb25maXJtVXNlcigpIHtcbiAgICB0cnkge1xuICAgICAgdmFyIGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICAgIHZhciByZXN1bHQgPSBhd2FpdCBjb25uZWN0aW9uLnF1ZXJ5KHRoaXMuc3FsLCBbdGhpcy5kYXRhLnRva2VuXSk7XG4gICAgICBpZiAocmVzdWx0LmNoYW5nZWRSb3dzID4gMCkge1xuICAgICAgICAvLyAgaG93IHRoZSBteXNxbCBsaWJyYXJ5IGlzIHdyYXBwZWQgLSBzdGFja292ZXJmbG93XG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgIHRoaXMucmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAgIHN1Y2Nlc3M6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyAgaG93IHRoZSBteXNxbCBsaWJyYXJ5IGlzIHdyYXBwZWQgLSBzdGFja292ZXJmbG93XG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignVXNlciBEb2VzIE5vdCBFeGlzdCcpO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgdGhpcy5uZXh0KGUpO1xuICAgIH1cbiAgfVxuXG4gIGFzeW5jIHJlZ2lzdGVyKCkge1xuICAgIHRyeSB7XG4gICAgICB2YXIge2VtYWlsLCBwYXNzd29yZCwgZmlyc3RfbmFtZSwgbGFzdF9uYW1lLCBwaG9uZX0gPSB0aGlzLmRhdGE7XG4gICAgICB2YXIgdXNlciA9IHtlbWFpbCwgcGFzc3dvcmQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgcGhvbmV9O1xuICAgICAgY29uc3QgcmVnaXN0ZXJUb2tlbiA9IHJhbmRvbXN0cmluZy5nZW5lcmF0ZSh7XG4gICAgICAgIGxlbmd0aDogMjAsXG4gICAgICAgIGNoYXJzZXQ6ICdoZXgnXG4gICAgICB9KTtcbiAgICAgIHVzZXIudG9rZW4gPSByZWdpc3RlclRva2VuO1xuICAgICAgY29uc3QgY29ubmVjdGlvbiA9IGF3YWl0IHBvb2wuZ2V0Q29ubmVjdGlvbigpO1xuICAgICAgY29uc3QgZW1haWxDaGVja1Jlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkodGhpcy5zcWwsIFt0aGlzLmRhdGEuZW1haWxdKTtcbiAgICAgIGlmIChlbWFpbENoZWNrUmVzdWx0Lmxlbmd0aCA+IDApIHtcbiAgICAgICAgY29ubmVjdGlvbi5jb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeGlzdHMnKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IGhhc2ggPSBhd2FpdCB0aGlzLmhhc2hQYXNzd29yZCh0aGlzLmRhdGEucGFzc3dvcmQpO1xuICAgICAgICB1c2VyLnBhc3N3b3JkID0gaGFzaDtcbiAgICAgICAgY29uc3QgaW5zZXJ0UmVzdWx0ID0gYXdhaXQgY29ubmVjdGlvbi5xdWVyeSh0aGlzLnNlY29uZFNRTCwgdXNlcik7XG4gICAgICAgIHZhciB1cmwgPSAnd3d3LnRlc3RzaXRlLmNvbSc7XG4gICAgICAgIHZhciByZWdpc3RlckVtYWlsQ29udGVudCA9ICdZb3UgYXJlIHJlY2VpdmluZyB0aGlzIGJlY2F1c2UgeW91IChvciBzb21lb25lIGVsc2UpIGhhdmUgc2lnbmVkIHVwICcgK1xuICAgICAgICAndG8gdGhlIHdlYnNpdGUuXFxuXFxuIFBsZWFzZSBjbGljayBvbiB0aGUgZm9sbG93aW5nIGxpbmssIG9yIHBhc3RlIHRoaXMgaW50byB5b3VyIGJyb3dzZXIgdG8gY29tcGxldGUnICtcbiAgICAgICAgICd0aGUgcHJvY2VzczpcXG5cXG4nICsgdXJsICsgJy9jb25maXJtRW1haWwvJyArIHVzZXIudG9rZW4gKyAnXFxuXFxuIE9uY2UgeW91IGhhdmUgY29uZmlybWVkIHlvdXIgYWNjb3VudCwnICtcbiAgICAgICAgICcgeW91IHdpbGwgYmUgYWJsZSB0byBsb2dpbi5cXG4nO1xuICAgICAgICB2YXIgRW1haWwgPSBuZXcgRW1haWwodGhpcy5kYXRhLmVtYWlsLCAndXNlcmNvbmZpcm1hdGlvbkBtYWtldXAuY29tJywgJ0NvbmZpcm0gQWNjb3VudCcsIHJlZ2lzdGVyRW1haWxDb250ZW50LCB0aGlzLnJlcyk7XG4gICAgICAgIGNvbnN0IGVtYWlsUmVzcG9uc2UgPSBhd2FpdCBFbWFpbC5zZW5kVG9rZW5FbWFpbCgpO1xuICAgICAgICBpZiAoZW1haWxSZXNwb25zZSkge1xuICAgICAgICAgIHRoaXMucmVzLmpzb24oe3N1Y2Nlc3M6ICdFbWFpbCBoYXMgYmVlbiBzZW50J30pO1xuICAgICAgICB9XG4gICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICB0aGlzLm5leHQoZSk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgbG9naW4oKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IGNvbm5lY3Rpb24gPSBhd2FpdCBwb29sLmdldENvbm5lY3Rpb24oKTtcbiAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGNvbm5lY3Rpb24ucXVlcnkodGhpcy5zcWwsIFt0aGlzLmRhdGEuZW1haWxdKTtcbiAgICAgIGNvbnN0IHVzZXJfaWQgPSByZXN1bHQudXNlcl9pZDtcbiAgICAgIGlmIChyZXN1bHQubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBtYXRjaCA9IGF3YWl0IHRoaXMuY29tcGFyZVBhc3N3b3JkKHRoaXMuZGF0YS5wYXNzd29yZCwgcmVzdWx0WzBdLnBhc3N3b3JkKTtcbiAgICAgICAgaWYgKG1hdGNoKSB7XG4gICAgICAgICAgY29uc3QgdG9rZW4gPSBqd3Quc2lnbih7dXNlcl9pZH0sIHNlY3JldCwge1xuICAgICAgICAgIGV4cGlyZXNJbjogMTQ0MCAvLyBleHBpcmVzIGluIDI0IGhvdXJzXG4gICAgICAgIH0pO1xuXG4gICAgICAgICAgY29ubmVjdGlvbi5jb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgICAgICB0aGlzLnJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIHVzZXJfaWQ6IHJlc3VsdFswXS51c2VyX2lkLFxuICAgICAgICAgICAgZW1haWw6IHJlc3VsdFswXS5lbWFpbCxcbiAgICAgICAgICAgIGZpcnN0X25hbWU6IHJlc3VsdFswXS5maXJzdF9uYW1lLFxuICAgICAgICAgICAgbGFzdF9uYW1lOiByZXN1bHRbMF0ubGFzdF9uYW1lLFxuICAgICAgICAgICAgcGhvbmU6IHJlc3VsdFswXS5waG9uZSxcbiAgICAgICAgICAgIHRva2VuOiB0b2tlblxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbm5lY3Rpb24uY29ubmVjdGlvbi5yZWxlYXNlKCk7XG4gICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbmNvcnJlY3QgUGFzc3dvcmQnKTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29ubmVjdGlvbi5jb25uZWN0aW9uLnJlbGVhc2UoKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVc2VyIERvZXMgTm90IEV4aXN0Jyk7XG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgY29uc29sZS5sb2coZSk7XG4gICAgICB0aGlzLm5leHQoZSk7XG4gICAgfVxuICB9XG5cbn1cbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
