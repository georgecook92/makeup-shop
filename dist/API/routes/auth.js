"use strict";function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var _authModel=require("../model/authModel.js"),_authModel2=_interopRequireDefault(_authModel),_rateLimit=require("../general/rateLimit"),express=require("express"),router=express.Router();router.get("/getUserFromToken",function(e,r,t){var o="select * from `_users` where `user_id` = ?",u=e.get("Authorization")||"",s=new _authModel2.default(u,e.body,r,t,o);s.getUserFromToken()}),router.post("/login",_rateLimit.createAccountLimiter,function(e,r,t){var o="select * from `_users` where `email` = ?",u=new _authModel2.default("",e.body,r,t,o);u.login()}),router.post("/register",function(e,r,t){console.log("ROUTE");var o="select * from `_users` where `email` = ?",u="INSERT INTO _users SET ?",s=new _authModel2.default("",e.body,r,t,o,u);s.register()}),router.put("/confirmUser",function(e,r,t){var o="update _users set `verified` = 1, `token` = NULL where `token` = ?",u=new _authModel2.default("",e.body,r,t,o);u.confirmUser()}),router.put("/changePassword",function(e,r,t){if(e.body.user_id){var o="update _users set `password` = ? where `user_id` = ?",u=new _authModel2.default("",e.body,r,t,o);u.changePassword(e.body.user_id)}else if(e.body.token){var s="update _users set `password` = ? where `token` = ?",a="update _users set `token` = NULL where `token` = ?",d=new _authModel2.default("",e.body,r,t,s,a);d.changePassword(e.body.token)}}),router.put("/forgotPassword",function(e,r,t){var o="update _users set `token` = ? where `email` = ?",u=new _authModel2.default("",e.body,r,t,o);u.forgotPasswordSetup()}),module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJvdXRlcy9hdXRoLmpzIl0sIm5hbWVzIjpbIl9hdXRoTW9kZWwiLCJyZXF1aXJlIiwiX3JhdGVMaW1pdCIsImV4cHJlc3MiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJyZXEiLCJyZXMiLCJuZXh0IiwiZW1haWxDaGVja1NRTCIsInRva2VuIiwiTW9kZWwiLCJfYXV0aE1vZGVsMiIsImRlZmF1bHQiLCJib2R5IiwicG9zdCIsImNyZWF0ZUFjY291bnRMaW1pdGVyIiwiaW5zZXJ0U1FMIiwicmVnaXN0ZXIiLCJjb25zb2xlIiwibG9nIiwidXBkYXRlQ29uZmlybVVzZXJTUUwiLCJjb25maXJtVXNlciIsInB1dCIsInVzZXJfaWQiLCJjaGFuZ2VQYXNzd29yZFNRTCIsImZvcmdvdFBhc3N3b3JkU1FMIiwicmVtb3ZlVG9rZW5TUUwiLCJGb3Jnb3RNb2RlbCIsImZvcmdvdHRlblBhc3N3b3JkU1FMIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6InFGQUVBLEdBQUFBLFlBQUFDLFFBQUEsd0VBRUFDLFdBQUFELFFBQUEsd0JBSklFLFFBQVVGLFFBQVEsV0FDbEJHLE9BQVNELFFBQVFFLFFBR3JCRCxRQUFBRSxJQUFBLG9CQUFBLFNBQUFDLEVBQUFDLEVBQUFDLEdBR0UsR0FBSUMsR0FBZ0IsNkNBQ2RDLEVBQVFKLEVBQUlELElBQUksa0JBQW9CLEdBQ3RDTSxFQUFRLEdBQUFDLGFBQUFDLFFBQWNILEVBQU9KLEVBQUlRLEtBQU1QLEVBQUtDLEVBQU1DLEVBVHhERSxHQUFJVCxxQkFhSkMsT0FBT1ksS0FBSyxTQUFaZCxXQUFBZSxxQkFBNEMsU0FBQ1YsRUFBS0MsRUFBS0MsR0FQdkRMLEdBQUFBLEdBQVcsMkNBRUhPLEVBQVFKLEdBQUFBLGFBQUFBLFFBQVEsR0FBQUEsRUFBQVEsS0FBb0JQLEVBQTFDQyxFQUFBQyxFQUNBRSxHQUFJQSxVQVdOUixPQUFPWSxLQUFLLFlBQWEsU0FBQ1QsRUFBS0MsRUFBS0MsR0FQcENMLFFBQU9ZLElBQUssUUFDVixJQUFJTixHQUFnQiwyQ0FDcEJRLEVBQUEsMkJBRUFOLEVBQUEsR0FBQUMsYUFBQUMsUUFBQSxHQUFBUCxFQUFBUSxLQUFBUCxFQUFBQyxFQUFBQyxFQUFBUSxFQUpGTixHQUFBTyxhQVFFQyxPQUFBQSxJQUFRQyxlQUFSLFNBQUFkLEVBQUFDLEVBQUFDLEdBQ0EsR0FBSUMsR0FBZ0IscUVBQ2hCUSxFQUFBQSxHQUFBQSxhQUFBQSxRQUFZLEdBQUFYLEVBQUFRLEtBQUFQLEVBQWhCQyxFQUFBYSxFQVNBVixHQUFNVyxnQkFMUG5CLE9BUERvQixJQUFBLGtCQUFBLFNBQUFqQixFQUFBQyxFQUFBQyxHQWdCRSxHQUFJRixFQUFJUSxLQUFLVSxRQUFTLENBUHhCckIsR0FBT29CLEdBQW9CLHVEQUNyQkYsRUFBQUEsR0FBQUEsYUFBQUEsUUFBdUIsR0FBQWYsRUFBQVEsS0FBQVAsRUFBQUMsRUFBQWlCLEVBQzNCZCxHQUFJQSxlQUFRTCxFQUFBUSxLQUFBVSxhQUNORixJQUFBQSxFQUFBQSxLQUFOWixNQUFBLENBSEYsR0FBQWdCLEdBQUEscURBYVFDLEVBQWlCLHFEQVBsQkosRUFBSSxHQUFBWCxhQUFBQyxRQUFtQixHQUFDUCxFQUFEUSxLQUFXTixFQUFYQSxFQUFvQmtCLEVBQUFDLEVBQ2hEQyxHQUFhSixlQUFTbEIsRUFBQVEsS0FBQUosVUFJckJQLE9BSkRvQixJQUlPLGtCQUFvQixTQUFBakIsRUFBQUMsRUFBQUMsR0FDekIsR0FBQXFCLEdBQXdCLGtEQUN4QmxCLEVBQUlnQixHQUFBQSxhQUFBQSxRQUFpQixHQUFBckIsRUFBQVEsS0FBQVAsRUFBQUMsRUFBQXFCLEVBQ3JCbEIsR0FBSWlCLHdCQUdQRSxPQVhEQyxRQUFBNUIiLCJmaWxlIjoicm91dGVzL2F1dGguanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbnZhciByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuaW1wb3J0IEF1dGhNb2RlbCBmcm9tICcuLi9tb2RlbC9hdXRoTW9kZWwuanMnO1xuXG5pbXBvcnQge2NyZWF0ZUFjY291bnRMaW1pdGVyfSBmcm9tICcuLi9nZW5lcmFsL3JhdGVMaW1pdCc7XG5cbnJvdXRlci5nZXQoJy9nZXRVc2VyRnJvbVRva2VuJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHZhciBlbWFpbENoZWNrU1FMID0gJ3NlbGVjdCAqIGZyb20gYF91c2Vyc2Agd2hlcmUgYHVzZXJfaWRgID0gPyc7XG4gIGNvbnN0IHRva2VuID0gcmVxLmdldCgnQXV0aG9yaXphdGlvbicpIHx8IFwiXCI7XG4gIHZhciBNb2RlbCA9IG5ldyBBdXRoTW9kZWwodG9rZW4sIHJlcS5ib2R5LCByZXMsIG5leHQsIGVtYWlsQ2hlY2tTUUwpO1xuICBNb2RlbC5nZXRVc2VyRnJvbVRva2VuKCk7XG59KTtcblxucm91dGVyLnBvc3QoJy9sb2dpbicsIGNyZWF0ZUFjY291bnRMaW1pdGVyLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdmFyIGVtYWlsQ2hlY2tTUUwgPSAnc2VsZWN0ICogZnJvbSBgX3VzZXJzYCB3aGVyZSBgZW1haWxgID0gPyc7XG4gIC8vIGVtcHR5IHRva2VuXG4gIHZhciBNb2RlbCA9IG5ldyBBdXRoTW9kZWwoJycsIHJlcS5ib2R5LCByZXMsIG5leHQsIGVtYWlsQ2hlY2tTUUwpO1xuICBNb2RlbC5sb2dpbigpO1xufSk7XG5cbnJvdXRlci5wb3N0KCcvcmVnaXN0ZXInLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgY29uc29sZS5sb2coJ1JPVVRFJyk7XG4gIHZhciBlbWFpbENoZWNrU1FMID0gJ3NlbGVjdCAqIGZyb20gYF91c2Vyc2Agd2hlcmUgYGVtYWlsYCA9ID8nO1xuICB2YXIgaW5zZXJ0U1FMID0gJ0lOU0VSVCBJTlRPIF91c2VycyBTRVQgPyc7XG5cbiAgdmFyIE1vZGVsID0gbmV3IEF1dGhNb2RlbCgnJywgcmVxLmJvZHksIHJlcywgbmV4dCwgZW1haWxDaGVja1NRTCwgaW5zZXJ0U1FMKTtcbiAgTW9kZWwucmVnaXN0ZXIoKTtcbn0pO1xuXG5yb3V0ZXIucHV0KCcvY29uZmlybVVzZXInLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgdmFyIHVwZGF0ZUNvbmZpcm1Vc2VyU1FMID0gJ3VwZGF0ZSBfdXNlcnMgc2V0IGB2ZXJpZmllZGAgPSAxLCBgdG9rZW5gID0gTlVMTCB3aGVyZSBgdG9rZW5gID0gPyc7XG4gIHZhciBNb2RlbCA9IG5ldyBBdXRoTW9kZWwoJycsIHJlcS5ib2R5LCByZXMsIG5leHQsIHVwZGF0ZUNvbmZpcm1Vc2VyU1FMKTtcbiAgTW9kZWwuY29uZmlybVVzZXIoKTtcbn0pO1xuXG5yb3V0ZXIucHV0KCcvY2hhbmdlUGFzc3dvcmQnLCAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKHJlcS5ib2R5LnVzZXJfaWQpIHtcbiAgICB2YXIgY2hhbmdlUGFzc3dvcmRTUUwgPSAndXBkYXRlIF91c2VycyBzZXQgYHBhc3N3b3JkYCA9ID8gd2hlcmUgYHVzZXJfaWRgID0gPyc7XG4gICAgdmFyIE1vZGVsID0gbmV3IEF1dGhNb2RlbCgnJywgcmVxLmJvZHksIHJlcywgbmV4dCwgY2hhbmdlUGFzc3dvcmRTUUwpO1xuICAgIE1vZGVsLmNoYW5nZVBhc3N3b3JkKHJlcS5ib2R5LnVzZXJfaWQpO1xuICB9IGVsc2UgaWYgKHJlcS5ib2R5LnRva2VuKSB7XG4gICAgdmFyIGZvcmdvdFBhc3N3b3JkU1FMID0gJ3VwZGF0ZSBfdXNlcnMgc2V0IGBwYXNzd29yZGAgPSA/IHdoZXJlIGB0b2tlbmAgPSA/JztcbiAgICB2YXIgcmVtb3ZlVG9rZW5TUUwgPSAndXBkYXRlIF91c2VycyBzZXQgYHRva2VuYCA9IE5VTEwgd2hlcmUgYHRva2VuYCA9ID8nO1xuICAgIHZhciBGb3Jnb3RNb2RlbCA9IG5ldyBBdXRoTW9kZWwoJycsIHJlcS5ib2R5LCByZXMsIG5leHQsIGZvcmdvdFBhc3N3b3JkU1FMLCByZW1vdmVUb2tlblNRTCk7XG4gICAgRm9yZ290TW9kZWwuY2hhbmdlUGFzc3dvcmQocmVxLmJvZHkudG9rZW4pO1xuICB9XG59KTtcblxucm91dGVyLnB1dCgnL2ZvcmdvdFBhc3N3b3JkJywgKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gIHZhciBmb3Jnb3R0ZW5QYXNzd29yZFNRTCA9ICd1cGRhdGUgX3VzZXJzIHNldCBgdG9rZW5gID0gPyB3aGVyZSBgZW1haWxgID0gPyc7XG4gIHZhciBNb2RlbCA9IG5ldyBBdXRoTW9kZWwoJycsIHJlcS5ib2R5LCByZXMsIG5leHQsIGZvcmdvdHRlblBhc3N3b3JkU1FMKTtcbiAgTW9kZWwuZm9yZ290UGFzc3dvcmRTZXR1cCgpO1xufSk7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19
